/*
정수 배열 arr와 2차원 정수 배열 queries이 주어집니다.
 queries의 원소는 각각 하나의 query를 나타내며, [s, e, k] 꼴입니다.

각 query마다 순서대로 s ≤ i ≤ e인 모든 i에 대해 k보다 크면서
 가장 작은 arr[i]를 찾습니다.

각 쿼리의 순서에 맞게 답을 저장한 배열을 반환하는 solution 함수를 완성해 주세요.
단, 특정 쿼리의 답이 존재하지 않으면 -1을 저장합니다.
*/

#include <string>
#include <vector>

using namespace std;

vector<int> solution(vector<int> arr, vector<vector<int>> queries) {
    vector<int> answer;
    vector<int> temp;
    int min;
    int min1;
    
    for(int i=0;i<queries.size();i++)
    {
        for(int k=0;k<arr.size();k++)
        {
            if(queries[i][0]<=k&&queries[i][1]>=k)
            {
                if(queries[i][2]<arr[k])
                {
                    temp.push_back(arr[k]);
                }
            }
        }
        if(temp.empty()==true)
        {
            answer.push_back(-1);
        }
        else
        {
            for(int i=0;i<temp.size();i++)
            {
                if(i==0)
                {
                    min=temp[i];
                }
                
                min1=temp[i];
                
                if(min>min1)
                {
                    min=min1;
                }
            }
            answer.push_back(min);
        }
        temp.clear();
    }
    
    return answer;
}


/************거스름돈****************
마트에서 계산을 하는 점원이 되었다.
손님에게 거슬러줘야할 돈이 N원일 때 거슬러줘야 할 동전의 최소 개수를 구하라. 이때
거스름돈으로 사용할 동전은 500원, 100원, 50원, 10원으로 무한히 존재하고, N은 10의 배수로 가정

입력 : 거스름돈 N
출력 : 동전의 최소 개수

예 1
입력 : 1,460
출력 : 8

예 2
입력 : 1,890
출력 : 11


10원


생각의 단편(실패)

10원
//10원부터 40원까지 1~4개
//60원부터 90원까지 1~4개
//50원 0개 00원 0개

50원
//50원 ~90원 1개

100원
//100원부터 400원까지 1~4개
//600원부터 900원까지 1~4개
//500원 0개 000원 0개

500원
//500원~900원 1개

//1000원 2개 2000원 4개 ...

이런식으로 규칙성? 글쎄.. 실패함.

************************************/

#include <iostream>
using namespace std;

int leastCoinNumber(int N) {

    int coinNumber = 0;


    // 최적의 답을 선택하는 그리디 알고리즘에 따라 답 도출
    // 지불해야 하는 500원의 값을 구하고 나머지를 계산 범주에 넣으면 작은 값으로 효율적인 계산이 가능해짐

    if (N >= 500) {
        coinNumber += (N / 500);    // 예컨대 1500을 500으로 나누면 3이 나옴. 그 값이 줘야하는 잔돈 수
        N %= 500;   //500으로 나누고 남은 값을 넘겨줌
    }

    // 100원
    if (N >= 100) {
        coinNumber += (N / 100);
        N %= 100;
    }

    // 50원
    if (N >= 50) {
        coinNumber += (N / 50);
        N %= 50;
    }

    // 10원
    if (N >= 10) {
        coinNumber += (N / 10);
        N %= 10;
    }

    return coinNumber;
}

int main()
{
    int N;
    cin >> N;  // 거슬러줘야 할 금액 입력

    cout << leastCoinNumber(N) << endl;
    return 0;
}
